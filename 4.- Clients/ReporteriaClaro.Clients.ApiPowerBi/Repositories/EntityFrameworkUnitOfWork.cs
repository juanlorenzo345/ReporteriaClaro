//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using the template for generating Repositories and a Unit of Work for EF Core model.
// Code is generated on: 03-12-2021 09:23:55 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using ReporteriaClaro.Clients.ApiPowerBi.DataProviders;
using ReporteriaClaro.Clients.ApiPowerBi.Repositories.Interfaces;

namespace ReporteriaClaro.Clients.ApiPowerBi.Repositories
{
    public partial class EntityFrameworkUnitOfWork : IUnitOfWork
    {
        protected DbContext context = null;

        IApiUserEntityRepository _ApiUserEntities;

        IVWDetallePronosticoEquipoPowerBiEntityRepository _VWDetallePronosticoEquipoPowerBiEntities;

        IVWHistorialMovimientoEquipoPowerBiEntityRepository _VWHistorialMovimientoEquipoPowerBiEntities;

        IVWRechazoLimpiezaPowerBiEntityRepository _VWRechazoLimpiezaPowerBiEntities;

        IVWUltimoEstadoEquipoPowerBiEntityRepository _VWUltimoEstadoEquipoPowerBiEntities;

        IVWEstadoLimpiezaPowerBiEntityRepository _VWEstadoLimpiezaPowerBiEntities;

        public EntityFrameworkUnitOfWork(DbContext context)
        {
            if (context == null)
            {
                throw new ArgumentNullException("context");
            }
            this.context = context;
        }

        public DbContext Context
        {
            get
            {
                return context;
            }
        }

        protected virtual void CloseContext()
        {
            if (context != null)
            {
                context.Dispose();
                context = null;
            }
        }

        #region IDisposable Methods

        private bool disposed = false;

        protected virtual void Dispose(bool disposing)
        {
            if (!this.disposed)
            {
                if (disposing)
                {
                    CloseContext();
                }
            }
            this.disposed = true;
        }

        public void Dispose()
        {
            Dispose(true);
            GC.SuppressFinalize(this);
        }

        #endregion

        #region IUnitOfWork Members

        public IApiUserEntityRepository ApiUserEntities {
          get {
            if (_ApiUserEntities == null)
              _ApiUserEntities = new ApiUserEntityRepository((ReporteriaClaroDbContext)context);
            return _ApiUserEntities;
          }
        }

        public IVWDetallePronosticoEquipoPowerBiEntityRepository VWDetallePronosticoEquipoPowerBiEntities {
          get {
            if (_VWDetallePronosticoEquipoPowerBiEntities == null)
              _VWDetallePronosticoEquipoPowerBiEntities = new VWDetallePronosticoEquipoPowerBiEntityRepository((ReporteriaClaroDbContext)context);
            return _VWDetallePronosticoEquipoPowerBiEntities;
          }
        }

        public IVWHistorialMovimientoEquipoPowerBiEntityRepository VWHistorialMovimientoEquipoPowerBiEntities {
          get {
            if (_VWHistorialMovimientoEquipoPowerBiEntities == null)
              _VWHistorialMovimientoEquipoPowerBiEntities = new VWHistorialMovimientoEquipoPowerBiEntityRepository((ReporteriaClaroDbContext)context);
            return _VWHistorialMovimientoEquipoPowerBiEntities;
          }
        }

        public IVWRechazoLimpiezaPowerBiEntityRepository VWRechazoLimpiezaPowerBiEntities {
          get {
            if (_VWRechazoLimpiezaPowerBiEntities == null)
              _VWRechazoLimpiezaPowerBiEntities = new VWRechazoLimpiezaPowerBiEntityRepository((ReporteriaClaroDbContext)context);
            return _VWRechazoLimpiezaPowerBiEntities;
          }
        }

        public IVWUltimoEstadoEquipoPowerBiEntityRepository VWUltimoEstadoEquipoPowerBiEntities {
          get {
            if (_VWUltimoEstadoEquipoPowerBiEntities == null)
              _VWUltimoEstadoEquipoPowerBiEntities = new VWUltimoEstadoEquipoPowerBiEntityRepository((ReporteriaClaroDbContext)context);
            return _VWUltimoEstadoEquipoPowerBiEntities;
          }
        }

        public IVWEstadoLimpiezaPowerBiEntityRepository VWEstadoLimpiezaPowerBiEntities {
          get {
            if (_VWEstadoLimpiezaPowerBiEntities == null)
              _VWEstadoLimpiezaPowerBiEntities = new VWEstadoLimpiezaPowerBiEntityRepository((ReporteriaClaroDbContext)context);
            return _VWEstadoLimpiezaPowerBiEntities;
          }
        }

        public virtual void Save()
        {
            if (context == null)
                throw new InvalidOperationException("Context has not been initialized.");
            context.SaveChanges();
        }

        #endregion
    }
}
