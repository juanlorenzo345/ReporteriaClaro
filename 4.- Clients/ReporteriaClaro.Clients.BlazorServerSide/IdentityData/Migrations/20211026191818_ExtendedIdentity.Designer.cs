// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReporteriaClaro.Clients.BlazorServerSide.Data;
using ReporteriaClaro.Clients.BlazorServerSide.IdentityData;

namespace ReporteriaClaro.Clients.BlazorServerSide.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211026191818_ExtendedIdentity")]
    partial class ExtendedIdentity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("AvailableAsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("AvailableAsSuperAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("DeactivatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeactivatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("IdentityRole");

                    b.HasData(
                        new
                        {
                            Id = "4FFF1CF5-C12A-4764-9DC2-7C622050DACF",
                            AvailableAsAdmin = false,
                            AvailableAsSuperAdmin = false,
                            ConcurrencyStamp = "31B69BDF-BFF8-4776-9E6F-30514259C5BF",
                            CreatedAt = new DateTime(2021, 10, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "EF Core seed",
                            Name = "Super administrador",
                            NormalizedName = "SUPER ADMINISTRADOR"
                        },
                        new
                        {
                            Id = "8F74F0E7-02CC-46D7-B26B-4E8C7606C5C1",
                            AvailableAsAdmin = false,
                            AvailableAsSuperAdmin = true,
                            ConcurrencyStamp = "B4CD1FE1-A213-497E-AB65-FFFB57621542",
                            CreatedAt = new DateTime(2021, 10, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "EF Core seed",
                            Name = "Administrador",
                            NormalizedName = "ADMINISTRADOR"
                        },
                        new
                        {
                            Id = "CE6FF9B8-1886-4E6A-866F-4EC8478C04D3",
                            AvailableAsAdmin = true,
                            AvailableAsSuperAdmin = true,
                            ConcurrencyStamp = "EC939B6D-1ED3-4343-BBCA-6CC8CF318B57",
                            CreatedAt = new DateTime(2021, 10, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "EF Core seed",
                            Name = "Diagnóstico",
                            NormalizedName = "DIAGNÓSTICO"
                        },
                        new
                        {
                            Id = "54AF55A9-2FCB-4EB0-B57B-D832D496054E",
                            AvailableAsAdmin = true,
                            AvailableAsSuperAdmin = true,
                            ConcurrencyStamp = "DF1464D9-0915-4133-A5C0-1D128417D274",
                            CreatedAt = new DateTime(2021, 10, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "EF Core seed",
                            Name = "Limpieza",
                            NormalizedName = "LIMPIEZA"
                        },
                        new
                        {
                            Id = "05C5A29F-08CE-4AB7-8094-2C755BF7E09F",
                            AvailableAsAdmin = true,
                            AvailableAsSuperAdmin = true,
                            ConcurrencyStamp = "F27D77F6-B766-4117-BFFF-CCC4CE853443",
                            CreatedAt = new DateTime(2021, 10, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "EF Core seed",
                            Name = "Pintura",
                            NormalizedName = "PINTURA"
                        },
                        new
                        {
                            Id = "6B1E4A23-7B9C-4F45-9E11-7F0DAF73866E",
                            AvailableAsAdmin = true,
                            AvailableAsSuperAdmin = true,
                            ConcurrencyStamp = "A5B01380-5A1B-453E-8326-96007F236E3F",
                            CreatedAt = new DateTime(2021, 10, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "EF Core seed",
                            Name = "QR",
                            NormalizedName = "QR"
                        },
                        new
                        {
                            Id = "9DF85B90-93AE-4D31-8AF3-4BC0CE59DA13",
                            AvailableAsAdmin = true,
                            AvailableAsSuperAdmin = true,
                            ConcurrencyStamp = "3DF4AC0A-0B3A-4CCE-8211-98EE5AC0E537",
                            CreatedAt = new DateTime(2021, 10, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "EF Core seed",
                            Name = "Etiquetado",
                            NormalizedName = "ETIQUETADO"
                        },
                        new
                        {
                            Id = "2025A47B-4690-4AF7-A37D-D21D96B757E1",
                            AvailableAsAdmin = true,
                            AvailableAsSuperAdmin = true,
                            ConcurrencyStamp = "D369638A-14F0-41FE-BAA2-EF44E8C58983",
                            CreatedAt = new DateTime(2021, 10, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "EF Core seed",
                            Name = "Calidad",
                            NormalizedName = "CALIDAD"
                        },
                        new
                        {
                            Id = "4E57555F-6201-46C2-B0C9-189843465678",
                            AvailableAsAdmin = true,
                            AvailableAsSuperAdmin = true,
                            ConcurrencyStamp = "E5191C7B-669D-4DE6-B71B-151B5EEC55FA",
                            CreatedAt = new DateTime(2021, 10, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "EF Core seed",
                            Name = "Empaque",
                            NormalizedName = "EMPAQUE"
                        },
                        new
                        {
                            Id = "4AF1C08B-1CB4-4DFB-8AA4-73CE164B21D1",
                            AvailableAsAdmin = true,
                            AvailableAsSuperAdmin = true,
                            ConcurrencyStamp = "21ECDB87-E257-4D4B-B2DC-207CBAB8278D",
                            CreatedAt = new DateTime(2021, 10, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "EF Core seed",
                            Name = "Despacho",
                            NormalizedName = "DESPACHO"
                        });
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("DeactivatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeactivatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("IdentityRoleClaim");
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("DeactivatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeactivatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedFullName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("IdentityUser");

                    b.HasData(
                        new
                        {
                            Id = "76DE897E-595E-47CF-8DDC-E0216DE47E94",
                            AccessFailedCount = 0,
                            Active = true,
                            ConcurrencyStamp = "6add3aac-f496-4ba7-a397-393548ec2b36",
                            CreatedAt = new DateTime(2021, 10, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "EF Core seed",
                            EmailConfirmed = false,
                            FullName = "Super administrador",
                            LockoutEnabled = false,
                            NormalizedFullName = "SUPER ADMINISTRADOR",
                            NormalizedUserName = "SUPERADMIN",
                            PasswordHash = "an4HfC5DWPj7f8SBnUYo7zWHigKxYbGd9kChgTzk6nUhEUDiH2I2TJRS-t0YAY-g0",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ad992e96-413e-4504-8a40-5211cd9d5b24",
                            TwoFactorEnabled = false,
                            UserName = "superadmin"
                        });
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUserAccessLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AccessAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("ipaddress");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("IdentityUserAccessLog");
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("DeactivatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeactivatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("IdentityUserClaim");
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUserExceptionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("IdentityUserExceptionLog");
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("DeactivatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeactivatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("IdentityUserLogin");
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUserOperationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("IdentityUserOperationLog");
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("DeactivatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeactivatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("IdentityUserRole");

                    b.HasData(
                        new
                        {
                            UserId = "76DE897E-595E-47CF-8DDC-E0216DE47E94",
                            RoleId = "4FFF1CF5-C12A-4764-9DC2-7C622050DACF",
                            CreatedAt = new DateTime(2021, 10, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "EF Core seed"
                        });
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUserToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("DeactivatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeactivatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("IdentityUserToken");
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationRoleClaim", b =>
                {
                    b.HasOne("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUserAccessLog", b =>
                {
                    b.HasOne("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUser", "User")
                        .WithMany("UserAccessLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUserClaim", b =>
                {
                    b.HasOne("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUserExceptionLog", b =>
                {
                    b.HasOne("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUser", "User")
                        .WithMany("UserExceptionLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUserLogin", b =>
                {
                    b.HasOne("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUserOperationLog", b =>
                {
                    b.HasOne("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUser", "User")
                        .WithMany("UserOperationLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUserToken", b =>
                {
                    b.HasOne("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReporteriaClaro.Clients.BlazorServerSide.Data.Models.ApplicationUser", b =>
                {
                    b.Navigation("UserAccessLogs");

                    b.Navigation("UserExceptionLogs");

                    b.Navigation("UserOperationLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
