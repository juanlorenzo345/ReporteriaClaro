//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using the template for generating Repositories and a Unit of Work for EF Core model.
// Code is generated on: 26-10-2021 09:00:55 AM
//
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using ReporteriaClaro.Domain.Interfaces.Repositories;
using ReporteriaClaro.Domain.Models.Entities;

namespace ReporteriaClaro.Infrastructure.Data.Repositories
{
    public partial class IdentityRoleEntityRepository
    {
	    public async Task<IEnumerable<IdentityRoleEntity>> GetAvailableAsAdminAsync(string role)
	    {
		    IQueryable<IdentityRoleEntity> consultaFiltrada = string.IsNullOrWhiteSpace(role) ? this.objectSet.Where(e => e.AvailableAsAdmin) : this.objectSet.Where(e => e.AvailableAsAdmin && EF.Functions.Like(e.Name, $"%{role}%"));
		    return await consultaFiltrada.OrderBy(e => e.Name).ToListAsync();
	    }

		public async Task<IEnumerable<IdentityRoleEntity>> GetAvailableAsSuperAdminAsync(string role)
	    {
			IQueryable<IdentityRoleEntity> consultaFiltrada = string.IsNullOrWhiteSpace(role) ? this.objectSet.Where(e => e.AvailableAsSuperAdmin) : this.objectSet.Where(e => e.AvailableAsSuperAdmin && EF.Functions.Like(e.Name, $"%{role}%"));
			return await consultaFiltrada.OrderBy(e => e.Name).ToListAsync();
	    }
    }
}
