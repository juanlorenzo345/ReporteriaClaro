//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using the template for generating Repositories and a Unit of Work for EF Core model.
// Code is generated on: 26-10-2021 09:00:55 AM
//
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Query;
using ReporteriaClaro.Domain.Interfaces.Repositories;
using ReporteriaClaro.Domain.Models.Entities;
using ReporteriaClaro.Domain.Models.Pagination;
using ReporteriaClaro.Domain.Models.Sorting;
using ReporteriaClaro.Infrastructure.Data.Extensions;

namespace ReporteriaClaro.Infrastructure.Data.Repositories
{
    public partial class IdentityUserAccessLogEntityRepository
    {
	    public async Task<PagedResult<IdentityUserAccessLogEntity>> GetPaginadoAsync(PagerInfo pagerInfo, SortingInfo sortingInfo)
	    {
		    IIncludableQueryable<IdentityUserAccessLogEntity, IdentityUserEntity> consultaJoin = this.objectSet
				.Include(e => e.IdentityUserEntity);

			IQueryable<IdentityUserAccessLogEntity> consultaFiltrada = consultaJoin;

			consultaFiltrada = sortingInfo.ColumnName switch
			{
				"id" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.Id),
				"usuario" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.IdentityUserEntity.UserName),
				"fecha_acceso" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.AccessAt),
				"direccion_ip" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.IpAddress),
				"login_satisfactorio" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.SuccessfulLogin),
				"detalle" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.Detail),
				_ => consultaFiltrada.OrderBy(e => e.AccessAt)
			};

			return await consultaFiltrada.GetPagedAsync(pagerInfo.Page, pagerInfo.PageSize);
		}
    }
}
