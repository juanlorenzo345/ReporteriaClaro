//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 10-12-2021 02:28:29 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace ReporteriaClaro.Application.Models.Transfer
{

    public static partial class EtapaEntityConverter
    {

        public static EtapaEntityDto ToDto(this ReporteriaClaro.Domain.Models.Entities.EtapaEntity source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static EtapaEntityDto ToDtoWithRelated(this ReporteriaClaro.Domain.Models.Entities.EtapaEntity source, int level)
        {
            if (source == null)
              return null;

            var target = new EtapaEntityDto();

            // Properties
            target.Id = source.Id;
            target.Nombre = source.Nombre;
            target.Posicion = source.Posicion;
            target.ZonaId = source.ZonaId;
            target.FechaCreacionRegistro = source.FechaCreacionRegistro;
            target.UsuarioCreacionRegistro = source.UsuarioCreacionRegistro;
            target.FechaModificacionRegistro = source.FechaModificacionRegistro;
            target.UsuarioModificacionRegistro = source.UsuarioModificacionRegistro;
            target.FechaEliminacionRegistro = source.FechaEliminacionRegistro;
            target.UsuarioEliminacionRegistro = source.UsuarioEliminacionRegistro;
            target.Activo = source.Activo;

            // Navigation Properties
            if (level > 0) {
              target.EquipoMovimientoEntities_EtapaOrigenId = source.EquipoMovimientoEntities_EtapaOrigenId.ToDtosWithRelated(level - 1);
              target.EquipoMovimientoEntities_EtapaDestinoId = source.EquipoMovimientoEntities_EtapaDestinoId.ToDtosWithRelated(level - 1);
              target.ZonaEntity = source.ZonaEntity.ToDtoWithRelated(level - 1);
              target.EtapaSecuenciaEntities_EtapaId = source.EtapaSecuenciaEntities_EtapaId.ToDtosWithRelated(level - 1);
              target.EtapaSecuenciaEntities_EtapaAnteriorPosteriorId = source.EtapaSecuenciaEntities_EtapaAnteriorPosteriorId.ToDtosWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static ReporteriaClaro.Domain.Models.Entities.EtapaEntity ToEntity(this EtapaEntityDto source)
        {
            if (source == null)
              return null;

            var target = new ReporteriaClaro.Domain.Models.Entities.EtapaEntity();

            // Properties
            target.Id = source.Id;
            target.Nombre = source.Nombre;
            target.Posicion = source.Posicion;
            target.ZonaId = source.ZonaId;
            target.FechaCreacionRegistro = source.FechaCreacionRegistro;
            target.UsuarioCreacionRegistro = source.UsuarioCreacionRegistro;
            target.FechaModificacionRegistro = source.FechaModificacionRegistro;
            target.UsuarioModificacionRegistro = source.UsuarioModificacionRegistro;
            target.FechaEliminacionRegistro = source.FechaEliminacionRegistro;
            target.UsuarioEliminacionRegistro = source.UsuarioEliminacionRegistro;
            target.Activo = source.Activo;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<EtapaEntityDto> ToDtos(this IEnumerable<ReporteriaClaro.Domain.Models.Entities.EtapaEntity> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<EtapaEntityDto> ToDtosWithRelated(this IEnumerable<ReporteriaClaro.Domain.Models.Entities.EtapaEntity> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<ReporteriaClaro.Domain.Models.Entities.EtapaEntity> ToEntities(this IEnumerable<EtapaEntityDto> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(ReporteriaClaro.Domain.Models.Entities.EtapaEntity source, EtapaEntityDto target);

        static partial void OnEntityCreating(EtapaEntityDto source, ReporteriaClaro.Domain.Models.Entities.EtapaEntity target);

    }

}
