//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 10-12-2021 02:28:29 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace ReporteriaClaro.Application.Models.Transfer
{

    public static partial class EquipoScrapEntityConverter
    {

        public static EquipoScrapEntityDto ToDto(this ReporteriaClaro.Domain.Models.Entities.EquipoScrapEntity source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static EquipoScrapEntityDto ToDtoWithRelated(this ReporteriaClaro.Domain.Models.Entities.EquipoScrapEntity source, int level)
        {
            if (source == null)
              return null;

            var target = new EquipoScrapEntityDto();

            // Properties
            target.Id = source.Id;
            target.Fecha = source.Fecha;
            target.EquipoId = source.EquipoId;
            target.Origen = source.Origen;
            target.Detalle = source.Detalle;
            target.FechaCreacionRegistro = source.FechaCreacionRegistro;
            target.UsuarioCreacionRegistro = source.UsuarioCreacionRegistro;
            target.FechaModificacionRegistro = source.FechaModificacionRegistro;
            target.UsuarioModificacionRegistro = source.UsuarioModificacionRegistro;
            target.FechaEliminacionRegistro = source.FechaEliminacionRegistro;
            target.UsuarioEliminacionRegistro = source.UsuarioEliminacionRegistro;
            target.Activo = source.Activo;

            // Navigation Properties
            if (level > 0) {
              target.EquipoEntity = source.EquipoEntity.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static ReporteriaClaro.Domain.Models.Entities.EquipoScrapEntity ToEntity(this EquipoScrapEntityDto source)
        {
            if (source == null)
              return null;

            var target = new ReporteriaClaro.Domain.Models.Entities.EquipoScrapEntity();

            // Properties
            target.Id = source.Id;
            target.Fecha = source.Fecha;
            target.EquipoId = source.EquipoId;
            target.Origen = source.Origen;
            target.Detalle = source.Detalle;
            target.FechaCreacionRegistro = source.FechaCreacionRegistro;
            target.UsuarioCreacionRegistro = source.UsuarioCreacionRegistro;
            target.FechaModificacionRegistro = source.FechaModificacionRegistro;
            target.UsuarioModificacionRegistro = source.UsuarioModificacionRegistro;
            target.FechaEliminacionRegistro = source.FechaEliminacionRegistro;
            target.UsuarioEliminacionRegistro = source.UsuarioEliminacionRegistro;
            target.Activo = source.Activo;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<EquipoScrapEntityDto> ToDtos(this IEnumerable<ReporteriaClaro.Domain.Models.Entities.EquipoScrapEntity> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<EquipoScrapEntityDto> ToDtosWithRelated(this IEnumerable<ReporteriaClaro.Domain.Models.Entities.EquipoScrapEntity> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<ReporteriaClaro.Domain.Models.Entities.EquipoScrapEntity> ToEntities(this IEnumerable<EquipoScrapEntityDto> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(ReporteriaClaro.Domain.Models.Entities.EquipoScrapEntity source, EquipoScrapEntityDto target);

        static partial void OnEntityCreating(EquipoScrapEntityDto source, ReporteriaClaro.Domain.Models.Entities.EquipoScrapEntity target);

    }

}
