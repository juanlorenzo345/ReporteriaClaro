//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 10-12-2021 02:28:29 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace ReporteriaClaro.Application.Models.Transfer
{

    public static partial class IdentityUserTokenEntityConverter
    {

        public static IdentityUserTokenEntityDto ToDto(this ReporteriaClaro.Domain.Models.Entities.IdentityUserTokenEntity source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static IdentityUserTokenEntityDto ToDtoWithRelated(this ReporteriaClaro.Domain.Models.Entities.IdentityUserTokenEntity source, int level)
        {
            if (source == null)
              return null;

            var target = new IdentityUserTokenEntityDto();

            // Properties
            target.UserId = source.UserId;
            target.LoginProvider = source.LoginProvider;
            target.Name = source.Name;
            target.CreatedAt = source.CreatedAt;
            target.CreatedBy = source.CreatedBy;
            target.ModifiedAt = source.ModifiedAt;
            target.ModifiedBy = source.ModifiedBy;
            target.DeactivatedAt = source.DeactivatedAt;
            target.DeactivatedBy = source.DeactivatedBy;
            target.Value = source.Value;

            // Navigation Properties
            if (level > 0) {
              target.IdentityUserEntity = source.IdentityUserEntity.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static ReporteriaClaro.Domain.Models.Entities.IdentityUserTokenEntity ToEntity(this IdentityUserTokenEntityDto source)
        {
            if (source == null)
              return null;

            var target = new ReporteriaClaro.Domain.Models.Entities.IdentityUserTokenEntity();

            // Properties
            target.UserId = source.UserId;
            target.LoginProvider = source.LoginProvider;
            target.Name = source.Name;
            target.CreatedAt = source.CreatedAt;
            target.CreatedBy = source.CreatedBy;
            target.ModifiedAt = source.ModifiedAt;
            target.ModifiedBy = source.ModifiedBy;
            target.DeactivatedAt = source.DeactivatedAt;
            target.DeactivatedBy = source.DeactivatedBy;
            target.Value = source.Value;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<IdentityUserTokenEntityDto> ToDtos(this IEnumerable<ReporteriaClaro.Domain.Models.Entities.IdentityUserTokenEntity> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<IdentityUserTokenEntityDto> ToDtosWithRelated(this IEnumerable<ReporteriaClaro.Domain.Models.Entities.IdentityUserTokenEntity> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<ReporteriaClaro.Domain.Models.Entities.IdentityUserTokenEntity> ToEntities(this IEnumerable<IdentityUserTokenEntityDto> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(ReporteriaClaro.Domain.Models.Entities.IdentityUserTokenEntity source, IdentityUserTokenEntityDto target);

        static partial void OnEntityCreating(IdentityUserTokenEntityDto source, ReporteriaClaro.Domain.Models.Entities.IdentityUserTokenEntity target);

    }

}
