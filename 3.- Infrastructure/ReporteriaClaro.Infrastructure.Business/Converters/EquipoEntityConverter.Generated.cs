//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 10-12-2021 02:28:29 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace ReporteriaClaro.Application.Models.Transfer
{

    public static partial class EquipoEntityConverter
    {

        public static EquipoEntityDto ToDto(this ReporteriaClaro.Domain.Models.Entities.EquipoEntity source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static EquipoEntityDto ToDtoWithRelated(this ReporteriaClaro.Domain.Models.Entities.EquipoEntity source, int level)
        {
            if (source == null)
              return null;

            var target = new EquipoEntityDto();

            // Properties
            target.Id = source.Id;
            target.HeaderId = source.HeaderId;
            target.Fecha = source.Fecha;
            target.Esn = source.Esn;
            target.NumeroReferencia = source.NumeroReferencia;
            target.ModeloId = source.ModeloId;
            target.ColorId = source.ColorId;
            target.Tipo = source.Tipo;
            target.Subtipo = source.Subtipo;
            target.Categoria = source.Categoria;
            target.Subcategoria = source.Subcategoria;
            target.Estado = source.Estado;
            target.Subestado = source.Subestado;
            target.FuentePoderEstadoId = source.FuentePoderEstadoId;
            target.UtpEstadoId = source.UtpEstadoId;
            target.ControlRemotoEstadoId = source.ControlRemotoEstadoId;
            target.HdmiEstadoId = source.HdmiEstadoId;
            target.RcaEstadoId = source.RcaEstadoId;
            target.Pintura = source.Pintura;
            target.Derivada = source.Derivada;
            target.ProcesoFinalizado = source.ProcesoFinalizado;
            target.FechaCreacionRegistro = source.FechaCreacionRegistro;
            target.UsuarioCreacionRegistro = source.UsuarioCreacionRegistro;
            target.FechaModificacionRegistro = source.FechaModificacionRegistro;
            target.UsuarioModificacionRegistro = source.UsuarioModificacionRegistro;
            target.FechaEliminacionRegistro = source.FechaEliminacionRegistro;
            target.UsuarioEliminacionRegistro = source.UsuarioEliminacionRegistro;
            target.Activo = source.Activo;

            // Navigation Properties
            if (level > 0) {
              target.EquipoColorEntity = source.EquipoColorEntity.ToDtoWithRelated(level - 1);
              target.EquipoModeloEntity = source.EquipoModeloEntity.ToDtoWithRelated(level - 1);
              target.EquipoMovimientoEntities = source.EquipoMovimientoEntities.ToDtosWithRelated(level - 1);
              target.DespachoDetalleEntities = source.DespachoDetalleEntities.ToDtosWithRelated(level - 1);
              target.EquipoScrapEntities = source.EquipoScrapEntities.ToDtosWithRelated(level - 1);
              target.ComponenteEstadoEntity_FuentePoderEstadoId = source.ComponenteEstadoEntity_FuentePoderEstadoId.ToDtoWithRelated(level - 1);
              target.ComponenteEstadoEntity_UtpEstadoId = source.ComponenteEstadoEntity_UtpEstadoId.ToDtoWithRelated(level - 1);
              target.ComponenteEstadoEntity_ControlRemotoEstadoId = source.ComponenteEstadoEntity_ControlRemotoEstadoId.ToDtoWithRelated(level - 1);
              target.ComponenteEstadoEntity_HdmiEstadoId = source.ComponenteEstadoEntity_HdmiEstadoId.ToDtoWithRelated(level - 1);
              target.ComponenteEstadoEntity_RcaEstadoId = source.ComponenteEstadoEntity_RcaEstadoId.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static ReporteriaClaro.Domain.Models.Entities.EquipoEntity ToEntity(this EquipoEntityDto source)
        {
            if (source == null)
              return null;

            var target = new ReporteriaClaro.Domain.Models.Entities.EquipoEntity();

            // Properties
            target.Id = source.Id;
            target.HeaderId = source.HeaderId;
            target.Fecha = source.Fecha;
            target.Esn = source.Esn;
            target.NumeroReferencia = source.NumeroReferencia;
            target.ModeloId = source.ModeloId;
            target.ColorId = source.ColorId;
            target.Tipo = source.Tipo;
            target.Subtipo = source.Subtipo;
            target.Categoria = source.Categoria;
            target.Subcategoria = source.Subcategoria;
            target.Estado = source.Estado;
            target.Subestado = source.Subestado;
            target.FuentePoderEstadoId = source.FuentePoderEstadoId;
            target.UtpEstadoId = source.UtpEstadoId;
            target.ControlRemotoEstadoId = source.ControlRemotoEstadoId;
            target.HdmiEstadoId = source.HdmiEstadoId;
            target.RcaEstadoId = source.RcaEstadoId;
            target.Pintura = source.Pintura;
            target.Derivada = source.Derivada;
            target.ProcesoFinalizado = source.ProcesoFinalizado;
            target.FechaCreacionRegistro = source.FechaCreacionRegistro;
            target.UsuarioCreacionRegistro = source.UsuarioCreacionRegistro;
            target.FechaModificacionRegistro = source.FechaModificacionRegistro;
            target.UsuarioModificacionRegistro = source.UsuarioModificacionRegistro;
            target.FechaEliminacionRegistro = source.FechaEliminacionRegistro;
            target.UsuarioEliminacionRegistro = source.UsuarioEliminacionRegistro;
            target.Activo = source.Activo;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<EquipoEntityDto> ToDtos(this IEnumerable<ReporteriaClaro.Domain.Models.Entities.EquipoEntity> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<EquipoEntityDto> ToDtosWithRelated(this IEnumerable<ReporteriaClaro.Domain.Models.Entities.EquipoEntity> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<ReporteriaClaro.Domain.Models.Entities.EquipoEntity> ToEntities(this IEnumerable<EquipoEntityDto> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(ReporteriaClaro.Domain.Models.Entities.EquipoEntity source, EquipoEntityDto target);

        static partial void OnEntityCreating(EquipoEntityDto source, ReporteriaClaro.Domain.Models.Entities.EquipoEntity target);

    }

}
