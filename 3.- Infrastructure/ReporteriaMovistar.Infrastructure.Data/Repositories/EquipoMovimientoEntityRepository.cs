//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using the template for generating Repositories and a Unit of Work for EF Core model.
// Code is generated on: 26-10-2021 03:18:16 PM
//
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Query;
using ReporteriaMovistar.Domain.Interfaces.Repositories;
using ReporteriaMovistar.Domain.Models.Entities;
using ReporteriaMovistar.Domain.Models.Pagination;
using ReporteriaMovistar.Domain.Models.Sorting;
using ReporteriaMovistar.Infrastructure.Data.Extensions;

namespace ReporteriaMovistar.Infrastructure.Data.Repositories
{
    public partial class EquipoMovimientoEntityRepository
    {
	    public async Task<PagedResult<EquipoMovimientoEntity>> GetPaginadoAsync(string esnBuscado, int idEtapa, bool activeRecords, PagerInfo pagerInfo, SortingInfo sortingInfo)
	    {
		    IIncludableQueryable<EquipoMovimientoEntity, OperarioEntity> consultaJoin = this.objectSet
			    .Include(e => e.EquipoEntity)
			    .ThenInclude(e => e.EquipoModeloEntity)
			    .ThenInclude(e => e.EquipoMarcaEntity)
			    .Include(e => e.EquipoEntity)
			    .ThenInclude(e => e.EquipoColorEntity)
			    .Include(e => e.EtapaEntity_EtapaOrigenId)
			    .Include(e => e.EtapaEntity_EtapaDestinoId)
			    .Include(e => e.OperarioEntity_OperarioId)
			    .Include(e => e.OperarioEntity_OperarioDevolucionId);

		    IQueryable<EquipoMovimientoEntity> consultaFiltrada = string.IsNullOrWhiteSpace(esnBuscado) ? consultaJoin.Where(e => e.Activo == activeRecords && e.EtapaOrigenId == idEtapa) : consultaJoin.Where(e => e.Activo == activeRecords && e.EtapaOrigenId == idEtapa && EF.Functions.Like(e.EquipoEntity.Esn, $"%{esnBuscado}%"));

			consultaFiltrada = sortingInfo.ColumnName switch
			{
				"id" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.Id),
				"fecha" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.Fecha),
				"esn" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.EquipoEntity.Esn),
				"marca" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.EquipoEntity.EquipoModeloEntity.EquipoMarcaEntity.Nombre),
				"modelo" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.EquipoEntity.EquipoModeloEntity.Nombre),
				"color" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.EquipoEntity.EquipoColorEntity.Nombre),
				"origen" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.EtapaEntity_EtapaOrigenId.Nombre),
				"destino" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.EtapaEntity_EtapaDestinoId.Nombre),
				"operario" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.OperarioEntity_OperarioId.Nombre),
				"operario_devolucion" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.OperarioEntity_OperarioDevolucionId.Nombre),
				"observacion" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.Observacion),
				"fecha_creacion" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.FechaCreacionRegistro),
				"usuario_creacion" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.UsuarioCreacionRegistro),
				"fecha_modificacion" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.FechaModificacionRegistro),
				"usuario_modificacion" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.UsuarioModificacionRegistro),
				"fecha_eliminacion" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.FechaEliminacionRegistro),
				"usuario_eliminacion" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.UsuarioEliminacionRegistro),
				"eliminado" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.Activo),
				_ => consultaFiltrada.OrderBy(e => e.Id)
			};

			return await consultaFiltrada.GetPagedAsync(pagerInfo.Page, pagerInfo.PageSize);
		}
    }
}
