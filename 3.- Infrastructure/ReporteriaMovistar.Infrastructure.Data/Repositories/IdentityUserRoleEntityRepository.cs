//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using the template for generating Repositories and a Unit of Work for EF Core model.
// Code is generated on: 26-10-2021 09:00:55 AM
//
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Query;
using ReporteriaMovistar.Domain.Interfaces.Repositories;
using ReporteriaMovistar.Domain.Models.Entities;
using ReporteriaMovistar.Domain.Models.Pagination;
using ReporteriaMovistar.Domain.Models.Sorting;
using ReporteriaMovistar.Infrastructure.Data.Extensions;

namespace ReporteriaMovistar.Infrastructure.Data.Repositories
{
    public partial class IdentityUserRoleEntityRepository
    {
	    public async Task<PagedResult<IdentityUserRoleEntity>> GetPaginadoAsync(string userId, PagerInfo pagerInfo, SortingInfo sortingInfo)
	    {
		    IIncludableQueryable<IdentityUserRoleEntity, IdentityRoleEntity> consultaJoin = this.objectSet
				.Include(e => e.IdentityRoleEntity);

			IQueryable<IdentityUserRoleEntity> consultaFiltrada = consultaJoin.Where(e => e.UserId == userId);

			consultaFiltrada = sortingInfo.ColumnName switch
			{
				"id" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.RoleId),
				"rol" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.IdentityRoleEntity.Name),
				"fecha_creacion" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.CreatedAt),
				"usuario_creacion" => consultaFiltrada.SortBy(sortingInfo.Direction, e => e.CreatedBy),
				_ => consultaFiltrada.OrderBy(e => e.IdentityRoleEntity.Name)
			};

			return await consultaFiltrada.GetPagedAsync(pagerInfo.Page, pagerInfo.PageSize);
		}
    }
}
